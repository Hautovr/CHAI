import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { Plus, Minus, BarChart3, Trash2 } from 'lucide-react';
import { telegram } from '../lib/telegram';
import { format, startOfDay, addDays, subDays, getDay, getHours } from 'date-fns';
import { useTips } from '../store/tips.store';
import { useSettings } from '../store/settings.store';
import { useSubscription } from '../store/subscription.store';

interface TablesStatsProps {
  onAddTable: () => void;
}

export function TablesStats({ onAddTable }: TablesStatsProps) {
  const { tips } = useTips();
  const { notificationsEnabled } = useSettings();
  const { hasFeature } = useSubscription();
  const [todayTables, setTodayTables] = useState(0);
  const [yesterdayTables, setYesterdayTables] = useState(0);
  const [pendingTables, setPendingTables] = useState(0);
  const [weeklyAverage, setWeeklyAverage] = useState(0);
  const [correlation, setCorrelation] = useState<string>('');
  const [prediction, setPrediction] = useState<string>('');
  const [timeAnalysis, setTimeAnalysis] = useState<string>('');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ç–æ–ª–æ–≤ –∏–∑ localStorage
  useEffect(() => {
    const today = format(startOfDay(new Date()), 'yyyy-MM-dd');
    const yesterday = format(startOfDay(subDays(new Date(), 1)), 'yyyy-MM-dd');
    
    console.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å—Ç–æ–ª–æ–≤:', { today, yesterday });
    
    const savedToday = localStorage.getItem(`tables_${today}`);
    const savedYesterday = localStorage.getItem(`tables_${yesterday}`);
    
    console.log('üíæ –î–∞–Ω–Ω—ã–µ –∏–∑ localStorage:', { savedToday, savedYesterday });
    
    if (savedToday) {
      const todayCount = parseInt(savedToday);
      setTodayTables(todayCount);
      console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Å—Ç–æ–ª—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è:', todayCount);
    }
    if (savedYesterday) {
      const yesterdayCount = parseInt(savedYesterday);
      setYesterdayTables(yesterdayCount);
      console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Å—Ç–æ–ª—ã –∑–∞ –≤—á–µ—Ä–∞:', yesterdayCount);
    }
    
    // –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω–µ–µ –∑–∞ –Ω–µ–¥–µ–ª—é
    calculateWeeklyAverage();
    // –í—ã—á–∏—Å–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    setTimeout(() => {
      calculateCorrelation();
      calculateTimeAnalysis();
      calculatePrediction();
    }, 100);
  }, []);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
  useEffect(() => {
    const interval = setInterval(() => {
      if (pendingTables > 0) {
        console.log('üíæ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–æ–ª–æ–≤...');
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
      }
    }, 5 * 60 * 1000); // 5 –º–∏–Ω—É—Ç

    return () => clearInterval(interval);
  }, [pendingTables]);

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ –ø–æ–ª—á–∞—Å–∞
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if (!notificationsEnabled) return;

    const notificationInterval = setInterval(() => {
      const now = new Date();
      const currentHour = getHours(now);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è 24/7
      let message = '';
      let shouldNotify = false;
      
      // –ü–æ–ª—É—á–∞–µ–º —á–∞–µ–≤—ã–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
      const today = format(startOfDay(new Date()), 'yyyy-MM-dd');
      const todayTips = tips.filter(tip => 
        format(startOfDay(new Date(tip.createdAt)), 'yyyy-MM-dd') === today
      );
      const todayTipsAmount = todayTips.reduce((sum, tip) => sum + tip.amount, 0);
      
      // –£–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å—É–º–º—ã —á–∞–µ–≤—ã—Ö
      if (todayTipsAmount === 0) {
        if (currentHour >= 6 && currentHour < 12) {
          message = 'üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ù–∞—á–Ω–∏—Ç–µ –¥–µ–Ω—å —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–∞–µ–≤—ã—Ö';
          shouldNotify = true;
        } else if (currentHour >= 12 && currentHour < 18) {
          message = '‚òÄÔ∏è –î–Ω–µ–≤–Ω–∞—è —Å–º–µ–Ω–∞: –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —á–∞–µ–≤—ã–µ';
          shouldNotify = true;
        } else if (currentHour >= 18 && currentHour < 22) {
          message = 'üåÜ –í–µ—á–µ—Ä–Ω—è—è —Å–º–µ–Ω–∞: –ø–∏–∫–æ–≤–æ–µ –≤—Ä–µ–º—è –¥–ª—è —á–∞–µ–≤—ã—Ö!';
          shouldNotify = true;
        } else if (currentHour >= 22 || currentHour < 6) {
          message = 'üåô –ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞: –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —á–∞–µ–≤—ã–µ';
          shouldNotify = true;
        }
      } else if (todayTipsAmount < 1000) {
        // –ï—Å–ª–∏ —á–∞–µ–≤—ã—Ö –º–∞–ª–æ, –Ω–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã
        if (currentHour >= 14 && currentHour < 20) {
          message = `üí∞ –£ –≤–∞—Å ${todayTipsAmount}‚ÇΩ —á–∞–µ–≤—ã—Ö. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!`;
          shouldNotify = true;
        }
      }
      
      if (shouldNotify && message) {
        // Haptic feedback
        telegram.hapticLight();
        
        // –õ–æ–≥–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        console.log('üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:', message);
        
        // –ü—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ alert (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
        // alert(message);
      }
    }, 30 * 60 * 1000); // 30 –º–∏–Ω—É—Ç

    return () => clearInterval(notificationInterval);
  }, [tips, notificationsEnabled]);

  const calculateWeeklyAverage = () => {
    const last7Days = Array.from({ length: 7 }, (_, i) => 
      format(startOfDay(subDays(new Date(), i)), 'yyyy-MM-dd')
    );
    
    let totalTables = 0;
    let daysWithData = 0;
    
    last7Days.forEach(day => {
      const saved = localStorage.getItem(`tables_${day}`);
      if (saved) {
        totalTables += parseInt(saved);
        daysWithData++;
      }
    });
    
    setWeeklyAverage(daysWithData > 0 ? Math.round(totalTables / daysWithData) : 0);
  };

  const calculateCorrelation = () => {
    // –ê–Ω–∞–ª–∏–∑ —á–∞–µ–≤—ã—Ö - —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å—É–º–º–∞–º–∏
    const today = format(startOfDay(new Date()), 'yyyy-MM-dd');
    const todayTips = tips.filter(tip => 
      format(startOfDay(new Date(tip.createdAt)), 'yyyy-MM-dd') === today
    );
    
    const todayTipsAmount = todayTips.reduce((sum, tip) => sum + tip.amount, 0);
    const avgTipsPerTable = todayTables > 0 ? todayTipsAmount / todayTables : 0;
    
    // –ê–Ω–∞–ª–∏–∑ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
    const last7Days = Array.from({ length: 7 }, (_, i) => 
      format(startOfDay(subDays(new Date(), i)), 'yyyy-MM-dd')
    );
    
    let totalTips7Days = 0;
    let totalTables7Days = 0;
    
    last7Days.forEach(day => {
      const dayTips = tips.filter(tip => 
        format(startOfDay(new Date(tip.createdAt)), 'yyyy-MM-dd') === day
      );
      const dayTables = parseInt(localStorage.getItem(`tables_${day}`) || '0');
      
      totalTips7Days += dayTips.reduce((sum, tip) => sum + tip.amount, 0);
      totalTables7Days += dayTables;
    });
    
    const avgTipsPerTable7Days = totalTables7Days > 0 ? totalTips7Days / totalTables7Days : 0;
    
    // –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è
    if (avgTipsPerTable > avgTipsPerTable7Days * 1.2) {
      setCorrelation(`üí∞ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! ${Math.round(avgTipsPerTable)}‚ÇΩ/—Å—Ç–æ–ª (–æ–±—ã—á–Ω–æ ${Math.round(avgTipsPerTable7Days)}‚ÇΩ)`);
    } else if (avgTipsPerTable > avgTipsPerTable7Days * 0.8) {
      setCorrelation(`üìä –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${Math.round(avgTipsPerTable)}‚ÇΩ/—Å—Ç–æ–ª`);
    } else {
      setCorrelation(`üìâ –ú–æ–∂–Ω–æ –ª—É—á—à–µ: ${Math.round(avgTipsPerTable)}‚ÇΩ/—Å—Ç–æ–ª (–æ–±—ã—á–Ω–æ ${Math.round(avgTipsPerTable7Days)}‚ÇΩ)`);
    }
  };

  const calculateTimeAnalysis = () => {
    // –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã - —É—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –¥–Ω—è, –¥–Ω—è –Ω–µ–¥–µ–ª–∏
    const now = new Date();
    const currentHour = getHours(now);
    const currentDay = getDay(now); // 0 = –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ, 1 = –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
    
    const dayNames = ['–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞'];
    const currentDayName = dayNames[currentDay];
    
    // –ê–Ω–∞–ª–∏–∑ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –¥–Ω—è
    let timeMessage = '';
    if (currentHour >= 6 && currentHour < 12) {
      timeMessage = 'üåÖ –£—Ç—Ä–µ–Ω–Ω—è—è —Å–º–µ–Ω–∞ - –æ–±—ã—á–Ω–æ –º–µ–Ω—å—à–µ —Å—Ç–æ–ª–æ–≤, –Ω–æ –±–æ–ª—å—à–µ —á–∞–µ–≤—ã—Ö';
    } else if (currentHour >= 12 && currentHour < 18) {
      timeMessage = '‚òÄÔ∏è –î–Ω–µ–≤–Ω–∞—è —Å–º–µ–Ω–∞ - —Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞';
    } else if (currentHour >= 18 && currentHour < 22) {
      timeMessage = 'üåÜ –í–µ—á–µ—Ä–Ω—è—è —Å–º–µ–Ω–∞ - –ø–∏–∫–æ–≤–æ–µ –≤—Ä–µ–º—è, –º–Ω–æ–≥–æ —Å—Ç–æ–ª–æ–≤';
    } else {
      timeMessage = 'üåô –ù–æ—á–Ω–∞—è —Å–º–µ–Ω–∞ - –æ—Å–æ–±—ã–π —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã';
    }
    
    // –ê–Ω–∞–ª–∏–∑ –ø–æ –¥–Ω—é –Ω–µ–¥–µ–ª–∏
    let dayMessage = '';
    if (currentDay >= 1 && currentDay <= 5) {
      dayMessage = 'üìÖ –ë—É–¥–Ω–∏–π –¥–µ–Ω—å - –æ–±—ã—á–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å';
    } else if (currentDay === 6) {
      dayMessage = 'üéâ –°—É–±–±–æ—Ç–∞ - –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å';
    } else {
      dayMessage = 'üèñÔ∏è –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ - —Å–µ–º–µ–π–Ω—ã–π –¥–µ–Ω—å, –º–Ω–æ–≥–æ —Å—Ç–æ–ª–æ–≤';
    }
    
    setTimeAnalysis(`${timeMessage} | ${dayMessage}`);
  };

  const calculatePrediction = () => {
    // –ü—Ä–æ–≥–Ω–æ–∑—ã - –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —á–∞–µ–≤—ã—Ö
    const now = new Date();
    const currentHour = getHours(now);
    const remainingHours = Math.max(0, 22 - currentHour); // –†–∞–±–æ—Ç–∞–µ–º –¥–æ 22:00
    
    console.log('üîÆ –ü—Ä–æ–≥–Ω–æ–∑ —Å—Ç–æ–ª–æ–≤:', {
      currentHour,
      remainingHours,
      now: now.toLocaleTimeString()
    });
    
    // –°—Ä–µ–¥–Ω—è—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
    const last7Days = Array.from({ length: 7 }, (_, i) => 
      format(startOfDay(subDays(new Date(), i)), 'yyyy-MM-dd')
    );
    
    let totalTips7Days = 0;
    let totalTables7Days = 0;
    
    last7Days.forEach(day => {
      const dayTips = tips.filter(tip => 
        format(startOfDay(new Date(tip.createdAt)), 'yyyy-MM-dd') === day
      );
      const dayTables = parseInt(localStorage.getItem(`tables_${day}`) || '0');
      
      totalTips7Days += dayTips.reduce((sum, tip) => sum + tip.amount, 0);
      totalTables7Days += dayTables;
      
      console.log(`üìä –î–µ–Ω—å ${day}:`, {
        tips: dayTips.length,
        tipsAmount: dayTips.reduce((sum, tip) => sum + tip.amount, 0),
        tables: dayTables
      });
    });
    
    const avgTipsPerTable = totalTables7Days > 0 ? totalTips7Days / totalTables7Days : 0;
    const avgTablesPerHour = totalTables7Days / (7 * 16); // 16 —á–∞—Å–æ–≤ —Ä–∞–±–æ—Ç—ã –≤ –¥–µ–Ω—å
    
    console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ 7 –¥–Ω–µ–π:', {
      totalTips7Days,
      totalTables7Days,
      avgTipsPerTable: Math.round(avgTipsPerTable),
      avgTablesPerHour: Math.round(avgTablesPerHour * 100) / 100
    });
    
    // –ü—Ä–æ–≥–Ω–æ–∑
    const predictedTables = Math.round(avgTablesPerHour * remainingHours);
    const predictedTips = Math.round(predictedTables * avgTipsPerTable);
    
    console.log('üîÆ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞:', {
      predictedTables,
      predictedTips,
      remainingHours
    });
    
    if (predictedTables > 0) {
      setPrediction(`üîÆ –ü—Ä–æ–≥–Ω–æ–∑: ~${predictedTables} —Å—Ç–æ–ª–æ–≤, ~${predictedTips}‚ÇΩ —á–∞–µ–≤—ã—Ö –¥–æ –∫–æ–Ω—Ü–∞ —Å–º–µ–Ω—ã`);
    } else {
      setPrediction('üèÅ –°–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!');
    }
  };

  const addPendingTable = () => {
    setPendingTables(prev => prev + 1);
    telegram.hapticLight();
  };

  const confirmTables = () => {
    if (pendingTables > 0) {
      const today = format(startOfDay(new Date()), 'yyyy-MM-dd');
      const newToday = todayTables + pendingTables;
      
      setTodayTables(newToday);
      localStorage.setItem(`tables_${today}`, newToday.toString());
      
      setPendingTables(0);
      telegram.hapticLight();
      onAddTable();
      
      // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      calculateWeeklyAverage();
      calculateCorrelation();
      calculateTimeAnalysis();
      calculatePrediction();
    }
  };

  // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
  const addQuickTables = (count: number) => {
    setPendingTables(prev => prev + count);
    telegram.hapticLight();
  };

  const resetCounter = () => {
    setPendingTables(0);
    telegram.hapticLight();
  };

  const resetTodayTables = () => {
    const today = format(startOfDay(new Date()), 'yyyy-MM-dd');
    
    console.log('üóëÔ∏è –°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:', today);
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    setTodayTables(0);
    setPendingTables(0);
    
    // –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ
    localStorage.setItem(`tables_${today}`, '0');
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    calculateWeeklyAverage();
    calculateCorrelation();
    calculateTimeAnalysis();
    calculatePrediction();
    
    // Haptic feedback
    telegram.hapticLight();
    
    console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è —Å–±—Ä–æ—à–µ–Ω–∞');
  };

  const removeTable = () => {
    if (todayTables > 0) {
      const today = format(startOfDay(new Date()), 'yyyy-MM-dd');
      const newToday = Math.max(0, todayTables - 1);
      
      setTodayTables(newToday);
      localStorage.setItem(`tables_${today}`, newToday.toString());
      
      telegram.hapticLight();
    }
  };

  const resetStats = () => {
    const today = format(startOfDay(new Date()), 'yyyy-MM-dd');
    setTodayTables(0);
    localStorage.setItem(`tables_${today}`, '0');
    telegram.hapticLight();
  };

  return (
    <motion.div 
      className="bg-gradient-to-br from-card to-mint/5 dark:from-gray-800 dark:to-gray-900 rounded-2xl p-5 shadow-lg border border-mint/30 dark:border-gray-700 mb-4"
      initial={{ opacity: 0, y: 20, scale: 0.95 }}
      animate={{ opacity: 1, y: 0, scale: 1 }}
      transition={{ 
        duration: 0.5, 
        delay: 0.2,
        type: "spring",
        stiffness: 100,
        damping: 15
      }}
    >
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <motion.div 
        className="flex items-center justify-between mb-6"
        initial={{ opacity: 0, y: -10 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.3, duration: 0.4 }}
      >
        <div className="flex items-center gap-3">
          <div className="w-8 h-8 rounded-xl bg-gradient-to-br from-mint to-mint-soft flex items-center justify-center shadow-md">
            <BarChart3 className="w-4 h-4 text-white" />
          </div>
          <div>
            <h3 className="text-lg font-bold text-ink dark:text-gray-100">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–∞–º–∏</h3>
            <p className="text-xs text-muted dark:text-gray-400">–î–æ–±–∞–≤–ª—è–π—Ç–µ —Å—Ç–æ–ª—ã –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É</p>
          </div>
        </div>
        
        <div className="flex items-center gap-4">
          {pendingTables > 0 && (
            <motion.button
              onClick={confirmTables}
              className="w-12 h-12 bg-green-500/20 hover:bg-green-500/30 text-green-600 rounded-full flex items-center justify-center shadow-lg border-2 border-green-400/50 hover:border-green-400 transition-all duration-300 backdrop-blur-sm"
              whileHover={{ scale: 1.1, rotate: 5, boxShadow: "0 8px 20px rgba(34, 197, 94, 0.3)" }}
              whileTap={{ scale: 0.9, rotate: -5 }}
              initial={{ scale: 0.8, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              transition={{ type: "spring", stiffness: 300, damping: 20 }}
            >
              <div className="text-xl">‚úÖ</div>
            </motion.button>
          )}
          <div className="text-center">
            <div className="text-2xl font-black text-mint dark:text-mint-soft">{pendingTables}</div>
            <div className="text-xs text-muted dark:text-gray-400">–æ–∂–∏–¥–∞–µ—Ç</div>
          </div>
        </div>
      </motion.div>
      
      {/* –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
      <div className="bg-green-50/50 dark:bg-green-900/20 rounded-xl p-4 mb-4 border border-green-200 dark:border-green-700/50">
        <div className="flex items-start gap-3">
          <div className="text-2xl">üìä</div>
          <div>
            <div className="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-2">–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞?</div>
            <div className="text-xs text-gray-800 dark:text-gray-200 space-y-1">
              <div>‚Ä¢ <strong>–°—Ä–µ–¥–Ω–µ–µ –∑–∞ –Ω–µ–¥–µ–ª—é</strong> - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –ø–æ 7 –¥–Ω—è–º</div>
              <div>‚Ä¢ <strong>–ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</strong> - —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ ‚ÇΩ/—Å—Ç–æ–ª —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –¥–Ω—è–º–∏</div>
              <div>‚Ä¢ <strong>–í—Ä–µ–º–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏–∑</strong> - —É—á–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –¥–Ω—è –∏ –¥–Ω—è –Ω–µ–¥–µ–ª–∏</div>
              <div>‚Ä¢ <strong>–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–º–µ–Ω—É</strong> - –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —Å—Ç–æ–ª–æ–≤ –¥–æ 22:00</div>
              <div>‚Ä¢ <strong>–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Å —á–∞–µ–≤—ã–º–∏</strong> - —Å–≤—è–∑—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç–æ–ª–æ–≤ –∏ —Å—É–º–º—ã —á–∞–µ–≤—ã—Ö</div>
            </div>
          </div>
        </div>
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
      <motion.div 
        className="bg-gradient-to-r from-mint/20 to-mint/15 dark:from-mint/30 dark:to-mint/20 rounded-xl p-3 mb-4 border border-mint/30 dark:border-mint/40 shadow-sm backdrop-blur-sm"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.5, duration: 0.4 }}
      >
        <div className="text-sm font-bold text-black dark:text-white mb-2 flex items-center gap-2 drop-shadow-lg bg-white/80 dark:bg-black/80 px-2 py-1 rounded-lg">
          <div className="w-2 h-2 rounded-full bg-gradient-to-br from-mint to-mint-soft shadow-sm"></div>
          –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        </div>
        <div className="grid grid-cols-3 gap-2">
          <motion.button
            onClick={() => setPendingTables(prev => Math.max(0, prev - 1))}
            disabled={pendingTables === 0}
            className={`py-2 px-3 rounded-lg text-xs font-semibold transition-all duration-300 ${
              pendingTables === 0 
                ? 'bg-gray-100/80 dark:bg-gray-700/80 text-gray-500 dark:text-gray-400 cursor-not-allowed border border-gray-300/70 dark:border-gray-600/70 backdrop-blur-sm' 
                : 'bg-gradient-to-br from-green-100/80 to-green-200/60 dark:from-green-800/40 dark:to-green-700/30 hover:from-green-200/90 hover:to-green-300/70 dark:hover:from-green-700/50 dark:hover:to-green-600/40 text-green-800 dark:text-gray-900 hover:text-green-900 dark:hover:text-gray-800 border border-green-400/60 dark:border-green-500/50 hover:border-green-500/80 dark:hover:border-green-400/60 shadow-sm hover:shadow-md backdrop-blur-sm'
            }`}
            whileHover={{ scale: pendingTables > 0 ? 1.03 : 1, y: pendingTables > 0 ? -1 : 0 }}
            whileTap={{ scale: pendingTables > 0 ? 0.97 : 1 }}
            initial={{ opacity: 0, scale: 0.8, y: 20 }}
            animate={{ opacity: 1, scale: 1, y: 0 }}
            transition={{ delay: 0.6, duration: 0.3, type: "spring", stiffness: 200 }}
          >
            <div className="text-sm mb-1">‚ûñ</div>
            <div className="text-xs">-1</div>
          </motion.button>
          <motion.button
            onClick={() => addQuickTables(1)}
            className="bg-gradient-to-br from-green-100/80 to-green-200/60 dark:from-green-800/40 dark:to-green-700/30 hover:from-green-200/90 hover:to-green-300/70 dark:hover:from-green-700/50 dark:hover:to-green-600/40 text-green-800 dark:text-gray-900 hover:text-green-900 dark:hover:text-gray-800 py-2 px-3 rounded-lg text-xs font-semibold transition-all duration-300 border border-green-400/60 dark:border-green-500/50 hover:border-green-500/80 dark:hover:border-green-400/60 shadow-sm hover:shadow-md backdrop-blur-sm"
            whileHover={{ scale: 1.03, y: -1 }}
            whileTap={{ scale: 0.97 }}
            initial={{ opacity: 0, scale: 0.8, y: 20 }}
            animate={{ opacity: 1, scale: 1, y: 0 }}
            transition={{ delay: 0.65, duration: 0.3, type: "spring", stiffness: 200 }}
          >
            <div className="text-sm mb-1">‚ûï</div>
            <div className="text-xs">+1</div>
          </motion.button>
          <motion.button
            onClick={resetCounter}
            disabled={pendingTables === 0}
            className={`py-2 px-3 rounded-lg text-xs font-semibold transition-all duration-300 ${
              pendingTables === 0 
                ? 'bg-gray-100/80 dark:bg-gray-700/80 text-gray-500 dark:text-gray-400 cursor-not-allowed border border-gray-300/70 dark:border-gray-600/70 backdrop-blur-sm' 
                : 'bg-gradient-to-br from-green-100/80 to-green-200/60 dark:from-green-800/40 dark:to-green-700/30 hover:from-green-200/90 hover:to-green-300/70 dark:hover:from-green-700/50 dark:hover:to-green-600/40 text-green-800 dark:text-gray-900 hover:text-green-900 dark:hover:text-gray-800 border border-green-400/60 dark:border-green-500/50 hover:border-green-500/80 dark:hover:border-green-400/60 shadow-sm hover:shadow-md backdrop-blur-sm'
            }`}
            whileHover={{ scale: pendingTables > 0 ? 1.03 : 1, y: pendingTables > 0 ? -1 : 0 }}
            whileTap={{ scale: pendingTables > 0 ? 0.97 : 1 }}
            initial={{ opacity: 0, scale: 0.8, y: 20 }}
            animate={{ opacity: 1, scale: 1, y: 0 }}
            transition={{ delay: 0.7, duration: 0.3, type: "spring", stiffness: 200 }}
          >
            <div className="text-sm mb-1">üîÑ</div>
            <div className="text-xs">–°–±—Ä–æ—Å</div>
          </motion.button>
        </div>
      </motion.div>

      
      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å—Ç–æ–ª–æ–≤ */}
      <motion.div 
        className="bg-gradient-to-br from-green-50/40 to-green-100/30 dark:from-green-900/20 dark:to-green-800/15 rounded-xl p-4 mb-6 border border-green-200/30 dark:border-green-700/30 shadow-sm backdrop-blur-sm"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.7, duration: 0.4 }}
      >
        <div className="text-sm font-semibold text-gray-900 dark:text-gray-100 mb-3 flex items-center gap-2">
          <div className="w-2 h-2 rounded-full bg-gradient-to-br from-green-500 to-green-600 shadow-sm"></div>
          –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –¥–µ–Ω—å
        </div>
        <div className="grid grid-cols-2 gap-3">
          <div className="bg-gradient-to-br from-white/40 to-gray-50/50 dark:from-gray-800/40 dark:to-gray-700/50 rounded-lg p-3 text-center border border-green-300/20 dark:border-green-600/20 shadow-sm backdrop-blur-sm">
            <div className="text-xs text-gray-600 dark:text-gray-400 mb-1.5 font-medium">–í—á–µ—Ä–∞</div>
            <div className="text-xl font-black text-gray-700 dark:text-gray-200">{yesterdayTables}</div>
            <div className="text-xs text-gray-500 dark:text-gray-400 mt-1">—Å—Ç–æ–ª–æ–≤</div>
          </div>
          <div className="bg-gradient-to-br from-green-200/25 to-green-300/20 dark:from-green-700/25 dark:to-green-600/20 rounded-lg p-3 text-center border-2 border-green-400/30 dark:border-green-500/30 shadow-md backdrop-blur-sm">
            <div className="text-xs text-green-700 dark:text-green-300 mb-1.5 font-medium">–°–µ–≥–æ–¥–Ω—è</div>
            <div className="text-xl font-black text-green-800 dark:text-green-200">{todayTables}</div>
            <div className="text-xs text-green-600 dark:text-green-400 mt-1">—Å—Ç–æ–ª–æ–≤</div>
          </div>
        </div>
      </motion.div>

      {/* –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ */}
      <motion.div 
        className="space-y-3"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.9, duration: 0.4 }}
      >
        {/* –ü—Ä–µ–º–∏—É–º –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ */}
        {hasFeature('advanced_analytics') && (
          <motion.div
            className="bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 rounded-lg p-3 border border-purple-200 dark:border-purple-700/50 shadow-sm"
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 1.0, duration: 0.4 }}
          >
            <div className="flex items-center gap-2 mb-2">
              <div className="text-xl">üöÄ</div>
              <div className="text-xs font-semibold text-purple-800 dark:text-purple-300">
                Premium –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
              </div>
            </div>
            <div className="text-xs text-purple-700 dark:text-purple-400">
              –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã –¥–æ—Å—Ç—É–ø–Ω—ã
            </div>
          </motion.div>
        )}
        {/* –°—Ä–µ–¥–Ω–µ–µ –∑–∞ –Ω–µ–¥–µ–ª—é */}
        <div className="bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-blue-900/30 dark:to-indigo-900/30 rounded-lg p-3 border border-blue-200 dark:border-blue-700/50 shadow-sm">
          <div className="flex items-center justify-between">
            <div>
              <div className="text-xs font-semibold text-blue-800 dark:text-blue-300 mb-1">–°—Ä–µ–¥–Ω–µ–µ –∑–∞ –Ω–µ–¥–µ–ª—é</div>
              <div className="text-lg font-black text-blue-600 dark:text-blue-400">{weeklyAverage}</div>
              <div className="text-xs text-blue-600 dark:text-blue-400">—Å—Ç–æ–ª–æ–≤ –≤ –¥–µ–Ω—å</div>
            </div>
            <div className="text-2xl">üìä</div>
          </div>
        </div>

        {/* –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ */}
        {correlation && (
          <div className="bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-900/30 dark:to-emerald-900/30 rounded-lg p-3 border border-green-200 dark:border-green-700/50 shadow-sm">
            <div className="flex items-center gap-2">
              <div className="text-xl">üí∞</div>
              <div>
                <div className="text-xs font-semibold text-green-800 dark:text-green-300 mb-1">–ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</div>
                <div className="text-xs font-medium text-green-700 dark:text-green-400">{correlation}</div>
              </div>
            </div>
          </div>
        )}

        {/* –í—Ä–µ–º–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏–∑ */}
        {timeAnalysis && (
          <div className="bg-gradient-to-r from-cyan-50 to-blue-50 dark:from-cyan-900/30 dark:to-blue-900/30 rounded-lg p-3 border border-cyan-200 dark:border-cyan-700/50 shadow-sm">
            <div className="flex items-center gap-2">
              <div className="text-xl">‚è∞</div>
              <div>
                <div className="text-xs font-semibold text-cyan-800 dark:text-cyan-300 mb-1">–í—Ä–µ–º–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏–∑</div>
                <div className="text-xs font-medium text-cyan-700 dark:text-cyan-400">{timeAnalysis}</div>
              </div>
            </div>
          </div>
        )}

        {/* –ü—Ä–æ–≥–Ω–æ–∑ */}
        {prediction && (
          <div className="bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/30 dark:to-pink-900/30 rounded-lg p-3 border border-purple-200 dark:border-purple-700/50 shadow-sm">
            <div className="flex items-center gap-2">
              <div className="text-xl">üîÆ</div>
              <div>
                <div className="text-xs font-semibold text-purple-800 dark:text-purple-300 mb-1">–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–º–µ–Ω—É</div>
                <div className="text-xs font-medium text-purple-700 dark:text-purple-400">{prediction}</div>
              </div>
            </div>
          </div>
        )}

        {/* –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ */}
        {todayTables === 0 && (
          <motion.div
            className="bg-gradient-to-r from-yellow-50 to-orange-50 dark:from-yellow-900/30 dark:to-orange-900/30 rounded-lg p-3 border border-yellow-200 dark:border-yellow-700/50 shadow-sm"
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ delay: 2 }}
          >
            <div className="flex items-center gap-2">
              <div className="text-xl">‚è∞</div>
              <div>
                <div className="text-xs font-semibold text-yellow-800 dark:text-yellow-300 mb-1">–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ</div>
                <div className="text-xs font-medium text-yellow-700 dark:text-yellow-400">–ù–µ –∑–∞–±—ã–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–æ–ª—ã?</div>
              </div>
            </div>
          </motion.div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
        <motion.button
          onClick={() => {
            console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
            resetTodayTables();
          }}
          className="w-full bg-gradient-to-r from-red-50 to-red-100 dark:from-red-900/30 dark:to-red-800/30 hover:from-red-100 hover:to-red-200 dark:hover:from-red-800/40 dark:hover:to-red-700/40 text-red-600 dark:text-red-300 hover:text-red-700 dark:hover:text-red-200 py-2.5 px-4 rounded-lg text-xs font-semibold transition-all duration-300 border border-red-200 dark:border-red-700/50 hover:border-red-300 dark:hover:border-red-600/50 shadow-sm hover:shadow-md"
          whileHover={{ scale: 1.02, y: -1 }}
          whileTap={{ scale: 0.98 }}
        >
          <div className="flex items-center justify-center gap-2">
            <div className="text-sm">üóëÔ∏è</div>
            <div>–°–±—Ä–æ—Å–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —Å–µ–≥–æ–¥–Ω—è</div>
          </div>
        </motion.button>
      </motion.div>
    </motion.div>
  );
}
