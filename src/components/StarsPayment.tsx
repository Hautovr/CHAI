import { motion } from 'framer-motion';
import { Star, Zap, CheckCircle } from 'lucide-react';
import { useSubscription } from '../store/subscription.store';
import { telegram } from '../lib/telegram';

export function StarsPayment() {
  const { subscription, upgradeWithStars, getPremiumPrice, resetSubscription } = useSubscription();
  
  const price = getPremiumPrice();

  const handleStarsPayment = async () => {
    try {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
      telegram.showPopup({
        title: '–û–ø–ª–∞—Ç–∞ –∑–≤–µ–∑–¥–∞–º–∏',
        message: '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞—Ç–µ–∂...',
        buttons: [{ id: 'cancel', type: 'cancel', text: '–û—Ç–º–µ–Ω–∞' }]
      });

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ Telegram Stars API
      const result = await telegram.requestPayment({
        currency: 'XTR', // Telegram Stars
        amount: price.stars,
        description: `Premium –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –º–µ—Å—è—Ü - ${price.stars} –∑–≤–µ–∑–¥`,
        payload: JSON.stringify({
          type: 'premium_subscription',
          duration: '1_month',
          stars: price.stars
        })
      });

      if (result.status === 'succeeded') {
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫—É
        upgradeWithStars(price.stars);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö
        telegram.showPopup({
          title: '–£—Å–ø–µ—à–Ω–æ!',
          message: `–ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ 1 –º–µ—Å—è—Ü –∑–∞ ${price.stars} –∑–≤–µ–∑–¥!`,
          buttons: [{ id: 'ok', type: 'default', text: '–û—Ç–ª–∏—á–Ω–æ!' }]
        });

        // –í–∏–±—Ä–∞—Ü–∏—è —É—Å–ø–µ—Ö–∞
        telegram.hapticLight();
      } else {
        throw new Error('–ü–ª–∞—Ç–µ–∂ –Ω–µ –ø—Ä–æ—à–µ–ª');
      }

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã:', error);
      
      // –ï—Å–ª–∏ –Ω–µ –≤ Telegram, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
      if (!telegram.isInTelegram()) {
        telegram.showPopup({
          title: '–û—à–∏–±–∫–∞',
          message: '–û–ø–ª–∞—Ç–∞ –∑–≤–µ–∑–¥–∞–º–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ Telegram. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram.',
          buttons: [{ id: 'ok', type: 'default', text: '–ü–æ–Ω—è—Ç–Ω–æ' }]
        });
      } else {
        telegram.showPopup({
          title: '–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã',
          message: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –ø–ª–∞—Ç–µ–∂. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
          buttons: [{ id: 'retry', type: 'default', text: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å' }]
        });
      }
    }
  };


  if (subscription.tier === 'premium') {
    return (
      <motion.div
        className="bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 rounded-2xl p-6 shadow-lg border border-green-200 dark:border-green-700/50 mb-4"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
      >
        <div className="flex items-center gap-3 mb-4">
          <div className="w-12 h-12 rounded-full bg-gradient-to-r from-green-500 to-emerald-500 flex items-center justify-center">
            <CheckCircle className="w-6 h-6 text-white" />
          </div>
          <div>
            <h2 className="text-xl font-bold text-green-800 dark:text-green-300">
              ‚≠ê –ü—Ä–µ–º–∏—É–º –∞–∫—Ç–∏–≤–µ–Ω
            </h2>
            <p className="text-sm text-green-600 dark:text-green-400">
              –û–ø–ª–∞—á–µ–Ω–æ –∑–≤–µ–∑–¥–∞–º–∏ ‚Ä¢ {subscription.starsAmount} ‚≠ê
            </p>
          </div>
        </div>
        
        <div className="bg-white/60 dark:bg-gray-800/60 rounded-xl p-4 border border-green-200 dark:border-green-700/50">
          <div className="text-center">
            <div className="text-2xl font-bold text-green-800 dark:text-green-300 mb-2">
              –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã!
            </div>
            <div className="text-sm text-green-600 dark:text-green-400 mb-4">
              –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! üöÄ
            </div>
            <button
              onClick={resetSubscription}
              className="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg text-sm font-semibold transition-all"
            >
              –°–±—Ä–æ—Å–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É (—Ç–µ—Å—Ç)
            </button>
          </div>
        </div>
      </motion.div>
    );
  }

  return (
    <motion.div
      className="bg-gradient-to-br from-yellow-50 to-orange-50 dark:from-yellow-900/20 dark:to-orange-900/20 rounded-2xl p-6 shadow-lg border border-yellow-200 dark:border-yellow-700/50 mb-4"
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
    >
      <div className="flex items-center gap-3 mb-6">
        <div className="w-12 h-12 rounded-full bg-gradient-to-r from-yellow-500 to-orange-500 flex items-center justify-center">
          <Star className="w-6 h-6 text-white" />
        </div>
        <div>
          <h2 className="text-xl font-bold text-yellow-800 dark:text-yellow-300">
            ‚≠ê –û–ø–ª–∞—Ç–∞ –∑–≤–µ–∑–¥–∞–º–∏
          </h2>
          <p className="text-sm text-yellow-600 dark:text-yellow-400">
            –ë—ã—Å—Ç—Ä–æ, –±–µ–∑–æ–ø–∞—Å–Ω–æ, –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–π
          </p>
        </div>
      </div>

      {/* –¶–µ–Ω–∞ –≤ –∑–≤–µ–∑–¥–∞—Ö */}
      <div className="flex justify-center mb-6">
        <motion.div
          className="bg-white/60 dark:bg-gray-800/60 rounded-xl p-6 border border-yellow-200 dark:border-yellow-700/50 text-center max-w-sm w-full"
          whileHover={{ scale: 1.02 }}
          whileTap={{ scale: 0.98 }}
        >
          <div className="flex items-center justify-center gap-3 mb-3">
            <Star className="w-8 h-8 text-yellow-500" />
            <span className="text-3xl font-bold text-yellow-800 dark:text-yellow-300">
              {price.stars} –∑–≤–µ–∑–¥
            </span>
          </div>
          <div className="text-lg text-yellow-600 dark:text-yellow-400 mb-4">
            –ó–∞ 1 –º–µ—Å—è—Ü Premium
          </div>
          <button
            onClick={handleStarsPayment}
            className="w-full bg-gradient-to-r from-yellow-500 to-orange-500 text-white px-6 py-3 rounded-lg font-bold text-lg hover:from-yellow-600 hover:to-orange-600 transition-all shadow-lg"
          >
            ‚≠ê –û–ø–ª–∞—Ç–∏—Ç—å –∑–≤–µ–∑–¥–∞–º–∏
          </button>
        </motion.div>
      </div>

      {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
      <div className="space-y-3">
        <h3 className="text-lg font-semibold text-yellow-800 dark:text-yellow-300 mb-3">
          üöÄ –ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ:
        </h3>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
          {[
            '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
            '–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö',
            '–£–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è',
            '–ö–∞—Å—Ç–æ–º–Ω—ã–µ —Ç–µ–º—ã',
            '–û–±–ª–∞—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è',
            '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'
          ].map((feature, index) => (
            <motion.div
              key={feature}
              className="flex items-center gap-2 text-sm text-yellow-700 dark:text-yellow-300"
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: index * 0.1, duration: 0.3 }}
            >
              <Zap className="w-4 h-4 text-yellow-500" />
              {feature}
            </motion.div>
          ))}
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–≤–µ–∑–¥–∞—Ö */}
      <div className="mt-6 p-4 bg-yellow-100 dark:bg-yellow-900/30 rounded-xl border border-yellow-200 dark:border-yellow-700/50">
        <div className="text-sm text-yellow-800 dark:text-yellow-300">
          <strong>üí° –û –∑–≤–µ–∑–¥–∞—Ö:</strong> –ó–≤–µ–∑–¥—ã ‚Äî —ç—Ç–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≤–∞–ª—é—Ç–∞ Telegram. 
          –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –∏—Ö –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Telegram –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å.
        </div>
      </div>
    </motion.div>
  );
}
